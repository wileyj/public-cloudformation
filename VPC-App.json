{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"App VPC",
    "Parameters" : {
        "VPCName" : {
            "Type" : "String",
            "Description" : "Lowercase VPCName",
            "Default" : "app"
        },
        "Environment":{
            "Type": "String",
            "Description": "Default Environment for the VPC, which is prod",
            "Default": "prod"
        },
        "Domain" : {
            "Type" : "String",
            "Description" : "Name of the Domain",
            "Default" : "domain.com"
        }
    },
    "Mappings" : {
        "AWSRegionArch2AMI": {
            "us-east-1" : {
                "minhvm"        : "ami-12345678",
                "minebs"        : "ami-12345678",
                "hvmgp2"        : "ami-12345678",
                "hvmebs"        : "ami-12345678",
                "pvebs"         : "ami-12345678",
                "pvinstance"    : "ami-12345678"
            }
        },
        "AWSInstanceType2Arch" : {
            "m3.medium" : {   "bastion" : "minebs" },
            "m4.large" :  {   "bastion": "minhvm" }
        },
        "SubnetConfig" : {
            "web" : {
                "VPC"        : "10.1.0.0/16",
                "PublicAZ1"  : "10.1.100.0/23",
                "PublicAZ2"  : "10.1.102.0/23",
                "PrivateAZ1" : "10.1.0.0/23",
                "PrivateAZ2" : "10.1.2.0/23",
                "NATAZ1"     : "10.1.253.0/24",
                "NATAZ2"     : "10.1.254.0/24"
            },
            "app" : {
                "VPC"        : "10.2.0.0/16",
                "PublicAZ1"  : "10.2.100.0/23",
                "PublicAZ2"  : "10.2.102.0/23",
                "PrivateAZ1" : "10.2.0.0/23",
                "PrivateAZ2" : "10.2.2.0/23",
                "NATAZ1"     : "10.2.253.0/24",
                "NATAZ2"     : "10.2.254.0/24"
            },
            "db" : {
                "VPC"        : "10.3.0.0/16",
                "PublicAZ1"  : "10.3.100.0/23",
                "PublicAZ2"  : "10.3.102.0/23",
                "PrivateAZ1" : "10.3.0.0/23",
                "PrivateAZ2" : "10.3.2.0/23",
                "NATAZ1"     : "10.3.253.0/24",
                "NATAZ2"     : "10.3.254.0/24"
            },
            "ecs" : {
                "VPC"        : "10.100.0.0/16",
                "PublicAZ1"  : "10.100.100.0/23",
                "PublicAZ2"  : "10.100.102.0/23",
                "PrivateAZ1" : "10.100.0.0/23",
                "PrivateAZ2" : "10.100.2.0/23",
                "NATAZ1"     : "10.100.253.0/24",
                "NATAZ2"     : "10.100.254.0/24"
            },
            "bastion" : {
                "VPC"        : "10.253.0.0/16",
                "PublicAZ1"  : "10.253.100.0/24",
                "PublicAZ2"  : "10.253.102.0/24"
            },
            "core" : {
                "VPC"        : "10.254.0.0/16",
                "PublicAZ1"  : "10.254.100.0/23",
                "PublicAZ2"  : "10.254.102.0/23",
                "PrivateAZ1" : "10.254.0.0/23",
                "PrivateAZ2" : "10.254.2.0/23",
                "NATAZ1"     : "10.254.253.0/24",
                "NATAZ2"     : "10.254.254.0/24"
            }
        },
        "VPCtoUpper" : {
            "web" : {
                "Name" : "Web"
            },
            "app" : {
                "Name" : "App"
            },
            "db" : {
                "Name" : "DB"
            },
            "ecs" : {
                "Name" : "ECS"
            },
            "core" : {
                "Name" : "Core"
            },
            "ssh" : {
                "Name" : "SSH"
            },
            "bastion" : {
                "Name" : "Bastion"
            }
        },
        "ShortRegion": {
            "us-east-1": { "Name": "use1" },
            "us-west-1": { "Name": "usw1" },
            "us-west-2": { "Name": "usw2" }
        },
        "RegionToVpc" : {
            "us-east-1" : {
                "AvailabilityZone1" : "us-east-1a",
                "AvailabilityZone2" : "us-east-1d"
            },
            "us-west-2" : {
                "AvailabilityZone1" : "us-west-2b",
                "AvailabilityZone2" : "us-west-2c"
            }
        },
        "EnvSwitch" : {
            "prod"    : { "shortenv" : "p" },
            "dev"     : { "shortenv" : "d" },
            "staging" : { "shortenv" : "s" },
            "qa"      : { "shortenv" : "q" }
        }
    },
    "Conditions":{
    },
    "Resources":{
        "VPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", { "Ref" : "VPCName" }, "VPC" ] },
                "EnableDnsSupport" : "True",
                "EnableDnsHostnames" : "True",
                "Tags" : [{
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Name",
                    "Value" :  { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Ref" : "VPCName" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "InternetGateway" : {
            "Type":"AWS::EC2::InternetGateway",
            "Properties" :{
                "Tags" : [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] } ]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Ref" : "VPCName" }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "InternetGatewayAttachement" : {
            "Type":"AWS::EC2::VPCGatewayAttachment",
            "Properties":{
                "InternetGatewayId":{  "Ref":"InternetGateway"},
                "VpcId":{  "Ref":"VPC"}
            }
        },
        "NatEIPAZ1" : {
            "Type":"AWS::EC2::EIP",
            "DependsOn":"InternetGatewayAttachement",
            "Properties": {
                "Domain":"vpc"
            }
        },
        "NatEIPAZ2" : {
            "Type":"AWS::EC2::EIP",
            "DependsOn":"InternetGatewayAttachement",
            "Properties": {
                "Domain":"vpc"
            }
        },
        "NatSubnetAZ1" : {
            "Type":"AWS::EC2::Subnet",
            "Properties":{
                "AvailabilityZone" : { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone1"] },
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", { "Ref" : "VPCName" }, "NATAZ1" ] },
                "VpcId":{  "Ref":"VPC"},
                "Tags" : [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] },"NAT", { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone1"]}]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Ref" : "VPCName" }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "NatSubnetAZ2" : {
            "Type":"AWS::EC2::Subnet",
            "Properties":{
                "AvailabilityZone" : { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone2"] },
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", { "Ref" : "VPCName" }, "NATAZ2" ] },
                "VpcId":{  "Ref":"VPC"},
                "Tags" : [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] },"NAT", { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone1"]}]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "NatGatewayAZ1" : {
            "Type":"AWS::EC2::NatGateway",
            "Properties":{
                "SubnetId":{  "Ref":"NatSubnetAZ1"},
                "AllocationId":{  "Fn::GetAtt":[  "NatEIPAZ1","AllocationId"]}
            }
        },
        "NatGatewayAZ2" : {
            "Type":"AWS::EC2::NatGateway",
            "Properties":{
                "SubnetId":{  "Ref":"NatSubnetAZ2"},
                "AllocationId":{  "Fn::GetAtt":[  "NatEIPAZ2","AllocationId"]}
            }
        },
        "PublicSubnetAZ1" : {
            "Type":"AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone1"] },
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", { "Ref" : "VPCName" }, "PublicAZ1" ] },
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }, "Public", { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone1"]}]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "PublicSubnetAZ2" : {
            "Type":"AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone2"] },
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", { "Ref" : "VPCName" }, "PublicAZ2" ] },
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }, "Public", { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone1"]}]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "PrivateSubnetAZ1" : {
            "Type":"AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone1"] },
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", { "Ref" : "VPCName" }, "PrivateAZ1" ] },
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }, "Private", { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone1"]}]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "PrivateSubnetAZ2" : {
            "Type":"AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone2"] },
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", { "Ref" : "VPCName" }, "PrivateAZ2" ] },
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }, "Private"]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "PublicSubnetsRouteTable" : {
            "Type":"AWS::EC2::RouteTable",
            "Properties":{
                "VpcId":{  "Ref":"VPC" },
                "Tags" : [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }, "Public"]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "PrivateSubnetsRouteTableAZ1" : {
            "Type":"AWS::EC2::RouteTable",
            "Properties":{
                "VpcId":{  "Ref":"VPC" },
                "Tags" : [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }, "Private", { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone1"] }]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "PrivateSubnetsRouteTableAZ2" : {
            "Type":"AWS::EC2::RouteTable",
            "Properties":{
                "VpcId":{  "Ref":"VPC" },
                "Tags" : [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }, "Private", { "Fn::FindInMap" : [ "RegionToVpc", { "Ref" : "AWS::Region" }, "AvailabilityZone2"] }]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "InternetRoute" : {
            "Type":"AWS::EC2::Route",
            "DependsOn":"InternetGateway",
            "Properties":{
                "RouteTableId":{  "Ref":"PublicSubnetsRouteTable"},
                "DestinationCidrBlock":"0.0.0.0/0",
                "GatewayId":{  "Ref":"InternetGateway"}
            }
        },
        "NatRouteAZ1" : {
            "Type": "AWS::EC2::Route",
            "DependsOn":[  "AssociateRouteTableWithNatSubnetAZ1" ],
            "Properties":{
                "RouteTableId":{  "Ref":"PrivateSubnetsRouteTableAZ1"},
                "DestinationCidrBlock":"0.0.0.0/0",
                "NatGatewayId":{  "Ref":"NatGatewayAZ1"}
            }
        },
        "NatRouteAZ2" : {
            "Type": "AWS::EC2::Route",
            "DependsOn":[  "AssociateRouteTableWithNatSubnetAZ2" ],
            "Properties":{
                "RouteTableId":{  "Ref":"PrivateSubnetsRouteTableAZ2"},
                "DestinationCidrBlock":"0.0.0.0/0",
                "NatGatewayId":{  "Ref":"NatGatewayAZ2"}
            }
        },
        "AssociateRouteTableWithNatSubnetAZ1" : {
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":{
                "RouteTableId":{  "Ref":"PublicSubnetsRouteTable"},
                "SubnetId":{  "Ref":"NatSubnetAZ1"}
            }
        },
        "AssociateRouteTableWithNatSubnetAZ2" : {
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":{
                "RouteTableId":{  "Ref":"PublicSubnetsRouteTable"},
                "SubnetId":{  "Ref":"NatSubnetAZ2"}
            }
        },
        "AssociateRouteTableWithPrivateSubnetAZ1" : {
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":{
                "RouteTableId":{  "Ref":"PrivateSubnetsRouteTableAZ1"},
                "SubnetId":{  "Ref":"PrivateSubnetAZ1"}
            }
        },
        "AssociateRouteTableWithPrivateSubnetAZ2" : {
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":{
                "RouteTableId":{  "Ref":"PrivateSubnetsRouteTableAZ2"},
                "SubnetId":{  "Ref":"PrivateSubnetAZ2"}
            }
        },
        "AssociateRouteTableWithPublicSubnetAZ1" : {
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":{
                "RouteTableId":{  "Ref":"PublicSubnetsRouteTable"},
                "SubnetId":{  "Ref":"PublicSubnetAZ1"}
            }
        },
        "AssociateRouteTableWithPublicSubnetAZ2" : {
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":{
                "RouteTableId":{  "Ref":"PublicSubnetsRouteTable"},
                "SubnetId":{  "Ref":"PublicSubnetAZ2"}
            }
        },
        "NetworkAcl" : {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [{
                    "Key": "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }]
            }
        },
        "SubnetNetworkAclAssociationPublicSubnetAZ1" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PublicSubnetAZ1" },
                "NetworkAclId" : { "Ref" : "NetworkAcl" }
            }
        },
        "SubnetNetworkAclAssociationPublicSubnetAZ2" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PublicSubnetAZ2" },
                "NetworkAclId" : { "Ref" : "NetworkAcl" }
            }
        },
        "SubnetNetworkAclAssociationPrivateSubnetAZ1" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PrivateSubnetAZ1" },
                "NetworkAclId" : { "Ref" : "NetworkAcl" }
            }
        },
        "SubnetNetworkAclAssociationPrivateSubnetAZ2" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PrivateSubnetAZ2" },
                "NetworkAclId" : { "Ref" : "NetworkAcl" }
            }
        },
        "SubnetNetworkAclAssociationNatSubnetAZ1" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "NatSubnetAZ1" },
                "NetworkAclId" : { "Ref" : "NetworkAcl" }
            }
        },
        "SubnetNetworkAclAssociationNatSubnetAZ2" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "NatSubnetAZ2" },
                "NetworkAclId" : { "Ref" : "NetworkAcl" }
            }
        },
        "InboundNetworkAclEntry" : {
            "DependsOn" : [ "NetworkAcl" ],
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "NetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "-1",
                "RuleAction" : "allow",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },
        "OutboundNetworkAclEntry" : {
            "DependsOn" : [ "NetworkAcl" ],
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "NetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "-1",
                "RuleAction" : "allow",
                "Egress" : "true",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "65535" }
            }
        },
        "InternalSecurityGroup": {
            "DependsOn" : ["VPC"],
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }, "Internal-Traffic" ]]},
                "VpcId": {"Ref": "VPC"},
                "SecurityGroupIngress": [{
                    "IpProtocol" : "-1",
                    "CidrIp": { "Fn::FindInMap" : [ "SubnetConfig", { "Ref" : "VPCName" }, "VPC" ] }
                }],
                "Tags": [{
                    "Key" : "Name",
                    "Value" : { "Fn::Join" : ["-", [ { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }, "Internal-Traffic" ]]}
                }, {
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Domain",
                    "Value" : { "Ref" : "Domain" }
                }]
            }
        },
        "DHCPOptions" : {
            "Type" : "AWS::EC2::DHCPOptions",
            "DependsOn" : ["VPC"],
            "Properties" : {
                "DomainName" : { "Fn::Join" : [".", [ { "Ref":"VPCName" }, { "Fn::FindInMap" : [ "ShortRegion", { "Ref" : "AWS::Region" }, "Name"] }, { "Ref" : "Domain" } ]]} ,
                "DomainNameServers" : [ "AmazonProvidedDNS" ],
                "NetbiosNodeType" : 2,
                "Tags" : [{
                    "Key": "Name",
                    "Value": { "Fn::Join" : [".", [ { "Ref":"VPCName" }, { "Fn::FindInMap" : [ "ShortRegion", { "Ref" : "AWS::Region" }, "Name"] }, { "Ref" : "Domain" } ]]}
                },{
                    "Key" : "Stack",
                    "Value" : { "Ref" : "AWS::StackId" }
                }, {
                    "Key" : "VPC",
                    "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
                }, {
                    "Key" : "Environment",
                    "Value" : { "Ref" : "Environment" }
                }]
            }
        },
        "AssociateDHCPWithVPC" : {
            "Type" : "AWS::EC2::VPCDHCPOptionsAssociation",
            "DependsOn" : [ "DHCPOptions" ],
            "Properties" : {
                "VpcId" : {"Ref" : "VPC"},
                "DhcpOptionsId" : {"Ref" : "DHCPOptions"}
            }
        },
        "WaitHandle":{
            "Type":"AWS::CloudFormation::WaitConditionHandle",
            "Properties":{}
        }
    },
   "Outputs":{
        "VPC" : {
            "Description" : "VPC Name",
            "Value" : { "Fn::FindInMap" : [ "VPCtoUpper", { "Ref" : "VPCName" }, "Name" ] }
        },
        "Region" : {
            "Description" : "AWS Region",
            "Value" : { "Ref" : "AWS::Region" }
        },
        "ShortRegion": {
            "Description": "AWS ShortRegion",
            "Value": { "Fn::FindInMap" : [ "ShortRegion", { "Ref" : "AWS::Region" }, "Name"] }
        },
        "VPCId" : {
            "Description" : "VPC ID",
            "Value" : { "Ref" : "VPC" }
        },
        "NatEIPAZ1":{
            "Description":"NAT GW AZ1 EIP",
            "Value":{  "Ref":"NatEIPAZ1" }
        },
        "NatEIPAZ2":{
            "Description":"NAT GW AZ2 EIP",
            "Value":{  "Ref":"NatEIPAZ2" }
        }
    }
}
